#
# Continuous Integration Workflow for libseccomp
#
# Copyright (c) 2020 Oracle and/or its affiliates.
# Author: Tom Hromatka <tom.hromatka@oracle.com>
#

#
# This library is free software; you can redistribute it and/or modify it
# under the terms of version 2.1 of the GNU Lesser General Public License as
# published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
# for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, see <http://www.gnu.org/licenses>.
#

name: Continuous Integration
on: ["push", "pull_request"]

jobs:
  runtests:
    runs-on: ubuntu-20.04
    name: ${{ matrix.distro }} ${{ matrix.arch }}

    # See here for more information:
    # https://github.com/marketplace/actions/run-on-architecture#supported-platforms
    strategy:
      matrix:
        include:
        - arch: aarch64
          distro: ubuntu20.04
        - arch: ppc64le
          distro: ubuntu20.04
        - arch: amd64
          distro: ubuntu20.04
        - arch: aarch64
          distro: fedora_latest
        

    steps:
    - run: |
        case "${{ matrix.distro }}" in
          ubuntu*|jessie|stretch|buster)
            sudo apt-get update -q -y
            sudo apt-get install -q -y build-essential valgrind clang lcov gperf astyle codespell
            ;;
          fedora*)
            cat /etc/fedora-release
            sudo dnf -y update
            sudo dnf -y install build-essential valgrind clang lcov gperf astyle codespell
            ;;
          alpine*)
            sudo apk update
            sudo apk add build-essential valgrind clang lcov gperf astyle codespell
            ;;
          esac
    - run: |
        python -m pip install --upgrade pip
        pip install cython
    # cython is installed to the following path
    - run: echo "/home/runner/.local/bin" >> $GITHUB_PATH
    - uses: actions/checkout@v2
    - run: ./autogen.sh
    - run: ./configure --enable-python
    - run: make check-build
    - name: Automated tests
      run: LIBSECCOMP_TSTCFG_STRESSCNT=5 make check
    - name: Live tests
      run: LIBSECCOMP_TSTCFG_TYPE=live LIBSECCOMP_TSTCFG_MODE_LIST=c make -C tests check
    - name: Scan build
      if: ${{ matrix.arch }} == "amd64"
      run: |
        make clean
        ./configure
        scan-build --status-bugs make
